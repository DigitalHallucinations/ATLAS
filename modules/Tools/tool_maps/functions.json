[
    {
        "name": "google_search",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 30,
        "auth": {
            "required": true,
            "type": "api_key",
            "env": "GOOGLE_API_KEY"
        },
        "allow_parallel": true,
        "idempotency_key": false,
        "cost_per_call": 0.005,
        "cost_unit": "USD",
        "capabilities": [
            "web_search",
            "knowledge_lookup"
        ],
        "providers": [
            {
                "name": "serpapi",
                "priority": 0,
                "health_check_interval": 300
            }
        ],
        "description": "A Google search result API. When you need a short and clear answer to a specific question, you can use it. The input should be a search query.",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search content."
                },
                "k": {
                    "type": "integer",
                    "default": 10,
                    "description": "Select the first k results in the search results as the response.",
                    "minimum": 1
                }
            },
            "required": [
                "query"
            ]
        }
    },
    {
        "name": "search_pubmed",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 30,
        "auth": {
            "required": false,
            "type": "api_key",
            "env": "NCBI_API_KEY",
            "docs": "Optional Entrez API key for higher rate limits."
        },
        "allow_parallel": true,
        "idempotency_key": false,
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "medical_research",
            "literature_search"
        ],
        "providers": [
            {
                "name": "ncbi_entrez",
                "priority": 0,
                "health_check_interval": 300
            }
        ],
        "description": "Search PubMed for biomedical literature and return a list of PubMed IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query."
                },
                "max_results": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 20,
                    "description": "The maximum number of PubMed IDs to return."
                },
                "page_size": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "description": "Batch size to request from the Entrez API."
                },
                "sort": {
                    "type": "string",
                    "description": "Optional Entrez sort order (e.g., 'pub+date')."
                },
                "datetype": {
                    "type": "string",
                    "description": "Date field to filter on (e.g., PDAT)."
                },
                "mindate": {
                    "type": "string",
                    "description": "Earliest date to include (YYYY/MM/DD)."
                },
                "maxdate": {
                    "type": "string",
                    "description": "Latest date to include (YYYY/MM/DD)."
                }
            },
            "required": [
                "query"
            ]
        }
    },
    {
        "name": "search_pmc",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 30,
        "auth": {
            "required": false,
            "type": "api_key",
            "env": "NCBI_API_KEY",
            "docs": "Optional Entrez API key for higher rate limits."
        },
        "allow_parallel": true,
        "idempotency_key": false,
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "medical_research",
            "literature_search"
        ],
        "providers": [
            {
                "name": "ncbi_entrez",
                "priority": 0,
                "health_check_interval": 300
            }
        ],
        "description": "Search PubMed Central for open access biomedical literature and return PMC IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query."
                },
                "max_results": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 20,
                    "description": "The maximum number of PMC IDs to return."
                },
                "page_size": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "description": "Batch size to request from the Entrez API."
                },
                "article_type": {
                    "type": "string",
                    "description": "Optional PMC article type filter."
                },
                "has_abstract": {
                    "type": "boolean",
                    "description": "Limit results to articles with abstracts."
                }
            },
            "required": [
                "query"
            ]
        }
    },
    {
        "name": "webpage_fetch",
        "version": "1.0.0",
        "side_effects": "network",
        "default_timeout": 15,
        "auth": {
            "required": false
        },
        "allow_parallel": false,
        "idempotency_key": {
            "required": true,
            "scope": "per-url",
            "guidance": "Use the normalized target URL as the idempotency key to avoid duplicate fetches."
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "web_content",
            "web_research",
            "document_ingestion"
        ],
        "providers": [
            {
                "name": "internal_http_client",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Download an allowlisted webpage, strip scripts and ads, and return clean text with the resolved title and URL.",
        "parameters": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "HTTP or HTTPS URL to fetch. Must belong to an allowlisted domain."
                }
            },
            "required": [
                "url"
            ]
        }
    },
    {
        "name": "get_current_info",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": false,
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "time_information",
            "date_information"
        ],
        "description": "Get the current time, date, day, month and year, or timestamp based on the format specified.",
        "parameters": {
            "type": "object",
            "properties": {
                "format_type": {
                    "type": "string",
                    "enum": [
                        "time",
                        "date",
                        "day",
                        "month_year",
                        "timestamp"
                    ],
                    "default": "timestamp"
                }
            },
            "required": []
        }
    },
    {
        "name": "policy_reference",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-query"
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "policy_lookup",
            "risk_assessment_support"
        ],
        "providers": [
            {
                "name": "builtin_policy",
                "priority": 0,
                "health_check_interval": 60
            }
        ],
        "description": "Retrieve internal safety and governance policy guidance relevant to a proposed action.",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Natural language description of the planned action or request requiring review."
                },
                "policy_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional explicit policy identifiers to include in the response."
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of policy categories to filter by."
                },
                "include_full_text": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to return full guidance text for each policy."
                },
                "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5,
                    "default": 3,
                    "description": "Maximum number of policy entries to return."
                }
            },
            "required": [
                "query"
            ]
        }
    },
    {
        "name": "context_tracker",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-conversation"
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "conversation_state",
            "status_reporting"
        ],
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Compile a normalized snapshot of the active conversation including recent highlights and participants.",
        "parameters": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string",
                    "description": "Identifier for the conversation being summarized."
                },
                "conversation_history": {
                    "type": "array",
                    "description": "Recent ordered messages that should be normalized into the snapshot.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "role": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "timestamp": {
                                "type": [
                                    "string",
                                    "number"
                                ]
                            }
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "description": "Optional summary override for the generated snapshot."
                },
                "highlights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of pre-selected highlight strings."
                }
            },
            "required": [
                "conversation_id"
            ]
        }
    },
    {
        "name": "geocode_location",
        "version": "1.0.0",
        "side_effects": "read_external_service",
        "default_timeout": 15,
        "auth": {
            "required": true,
            "type": "api_key",
            "env": "OPENWEATHERMAP_API_KEY"
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-location"
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "geolocation",
            "mapping"
        ],
        "providers": [
            {
                "name": "openweathermap",
                "priority": 0,
                "health_check_interval": 600
            }
        ],
        "description": "Look up latitude and longitude coordinates for a user-specified location string using OpenWeather's geocoding API.",
        "parameters": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "City name, state code (US only), and optional country code separated by commas."
                }
            },
            "required": [
                "location"
            ]
        }
    },
    {
        "name": "get_current_location",
        "version": "1.0.0",
        "side_effects": "read_external_service",
        "default_timeout": 10,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-session"
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "geolocation",
            "context_awareness"
        ],
        "providers": [
            {
                "name": "ip-api",
                "priority": 0,
                "health_check_interval": 300
            }
        ],
        "description": "Retrieve the caller's approximate location using the IP-API geolocation service.",
        "parameters": {
            "type": "object",
            "properties": {},
            "required": []
        }
    },
    {
        "name": "priority_queue",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-task-list"
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "task_management",
            "status_reporting"
        ],
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Score and sort operational tasks to produce a prioritized execution list.",
        "parameters": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "integer"
                            },
                            "status": {
                                "type": "string"
                            },
                            "due_at": {
                                "type": "string",
                                "description": "ISO 8601 timestamp"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "description": "Tasks to be evaluated and sorted."
                },
                "default_priority": {
                    "type": "integer",
                    "default": 3,
                    "description": "Priority level to use when a task does not specify one."
                },
                "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Optional maximum number of tasks to return."
                },
                "reference_time": {
                    "type": [
                        "string",
                        "number"
                    ],
                    "description": "Override the timestamp used when computing urgency."
                }
            },
            "required": []
        }
    },
    {
        "name": "debian12_calendar",
        "version": "1.1.0",
        "side_effects": "filesystem",
        "default_timeout": 15,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": false,
            "guidance": "Provide a stable key for read operations when polling. Omit the key when issuing create, update, or delete requests."
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "calendar_read",
            "calendar_write"
        ],
        "providers": [
            {
                "name": "debian12_local",
                "priority": 0,
                "health_check_interval": 300
            }
        ],
        "requires_flags": {
            "create": [
                "type.personal_assistant.access_to_calendar",
                "type.personal_assistant.calendar_write_enabled"
            ],
            "update": [
                "type.personal_assistant.access_to_calendar",
                "type.personal_assistant.calendar_write_enabled"
            ],
            "delete": [
                "type.personal_assistant.access_to_calendar",
                "type.personal_assistant.calendar_write_enabled"
            ]
        },
        "description": "Interact with the Debian 12 on-device calendar to list, search, inspect, and manage events.",
        "parameters": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string",
                    "enum": [
                        "list",
                        "detail",
                        "search",
                        "create",
                        "update",
                        "delete"
                    ],
                    "description": "Calendar operation to perform."
                },
                "event_id": {
                    "type": "string",
                    "description": "Identifier of the event to fetch, update, or delete."
                },
                "query": {
                    "type": "string",
                    "description": "Text used to search titles, descriptions, and locations when operation is 'search'."
                },
                "start": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that bounds the window for list/search operations or sets the start of a created/updated event."
                },
                "end": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that bounds the window for list/search operations or sets the end of a created/updated event."
                },
                "calendar": {
                    "type": "string",
                    "description": "Optional calendar identifier (e.g., ICS file stem or account id)."
                },
                "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Maximum number of events to return for list/search operations."
                },
                "title": {
                    "type": "string",
                    "description": "Event title when creating or updating an entry.",
                    "minLength": 1
                },
                "description": {
                    "type": "string",
                    "description": "Optional event description for create/update operations."
                },
                "location": {
                    "type": "string",
                    "description": "Optional location for create/update operations."
                },
                "all_day": {
                    "type": "boolean",
                    "description": "Whether the created or updated event should be treated as an all-day entry."
                },
                "attendees": {
                    "type": "array",
                    "description": "List of attendees to include when creating or updating an event.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "Email address of the attendee."
                            },
                            "name": {
                                "type": "string",
                                "description": "Display name of the attendee."
                            },
                            "role": {
                                "type": "string",
                                "description": "Optional participation role (e.g., REQ-PARTICIPANT)."
                            },
                            "status": {
                                "type": "string",
                                "description": "Optional participation status (e.g., ACCEPTED)."
                            }
                        },
                        "required": [
                            "email"
                        ]
                    }
                }
            },
            "required": [
                "operation"
            ]
        },
        "idempotency_guidance": "Reads are idempotent and may use a stable key when polling. Create, update, and delete operations mutate the calendar and should not be retried automatically."
    },
    {
        "name": "execute_python",
        "version": "1.0.0",
        "side_effects": "compute",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": false,
        "idempotency_key": false,
        "safety_level": "high",
        "requires_consent": true,
        "requires_flags": {
            "read": [
                "type.personal_assistant.terminal_read_enabled"
            ],
            "write": [
                "type.personal_assistant.terminal_read_enabled",
                "type.personal_assistant.terminal_write_enabled"
            ]
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "code_execution",
            "analysis"
        ],
        "description": "Execute Python code inside a sandboxed interpreter with stdout capture and timeout enforcement.",
        "parameters": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The Python code to execute"
                },
                "timeout": {
                    "type": "number",
                    "minimum": 0.1,
                    "maximum": 30,
                    "default": 5,
                    "description": "Optional timeout override in seconds."
                }
            },
            "required": [
                "command"
            ]
        }
    },
    {
        "name": "execute_javascript",
        "version": "1.0.0",
        "side_effects": "compute",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": false,
        "idempotency_key": false,
        "safety_level": "high",
        "requires_consent": true,
        "requires_flags": {
            "execute": [
                "type.developer.javascript_execution_enabled"
            ]
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "javascript_exec",
            "code_execution"
        ],
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Execute JavaScript with a sandboxed runtime that captures stdout, stderr, and generated files.",
        "parameters": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "JavaScript source code to execute."
                },
                "timeout": {
                    "type": "number",
                    "minimum": 0.1,
                    "maximum": 30,
                    "default": 5,
                    "description": "Optional timeout override in seconds."
                },
                "files": {
                    "type": "array",
                    "description": "Optional files to seed into the sandboxed working directory.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "description": "Relative file path inside the sandbox."
                            },
                            "content": {
                                "type": "string",
                                "description": "File contents as UTF-8 text or base64 encoded data."
                            },
                            "encoding": {
                                "type": "string",
                                "enum": [
                                    "utf-8",
                                    "base64"
                                ],
                                "default": "utf-8",
                                "description": "Encoding used to interpret the provided content."
                            }
                        },
                        "required": [
                            "path",
                            "content"
                        ]
                    }
                }
            },
            "required": [
                "command"
            ]
        }
    },
    {
        "name": "terminal_command",
        "version": "1.0.0",
        "side_effects": "system",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": false,
        "idempotency_key": {
            "required": true,
            "scope": "per-command",
            "guidance": "Combine the normalized command tokens and working directory to deduplicate retried executions."
        },
        "safety_level": "high",
        "requires_consent": true,
        "requires_flags": {
            "read": [
                "type.personal_assistant.terminal_read_enabled"
            ],
            "write": [
                "type.personal_assistant.terminal_read_enabled",
                "type.personal_assistant.terminal_write_enabled"
            ]
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "terminal_execution",
            "system_inspection"
        ],
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Execute a constrained terminal command inside the ATLAS sandbox and return stdout, stderr, and exit status.",
        "parameters": {
            "type": "object",
            "properties": {
                "command": {
                    "type": [
                        "string",
                        "array"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "description": "Command to execute. Supply a shell-free string or a tokenized list where the first item is the command and remaining items populate positional arguments without using the optional arguments field."
                },
                "timeout": {
                    "type": "number",
                    "minimum": 0.1,
                    "maximum": 30,
                    "default": 5,
                    "description": "Maximum number of seconds to allow the command to run before timing out."
                },
                "working_directory": {
                    "type": "string",
                    "description": "Optional working directory relative to the sandbox root."
                }
            },
            "required": [
                "command"
            ]
        }
    },
    {
        "name": "filesystem_read",
        "version": "1.0.0",
        "side_effects": "filesystem",
        "default_timeout": 2,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-path",
            "guidance": "Use the normalized sandbox-relative path combined with any read constraints (e.g., max_bytes) to deduplicate retries."
        },
        "safety_level": "medium",
        "policy_flags": {
            "sandbox_enforced": true,
            "reads_user_files": true,
            "writes_user_files": false
        },
        "quota_hints": {
            "max_bytes_per_read": 262144,
            "timeout_seconds": 2.0
        },
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Read a file from the sandboxed filesystem, returning MIME metadata and optionally truncated contents.",
        "parameters": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Sandbox-relative path of the file to read."
                },
                "max_bytes": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Optional override to reduce the default read quota in bytes."
                }
            },
            "required": [
                "path"
            ]
        }
    },
    {
        "name": "filesystem_write",
        "version": "1.0.0",
        "side_effects": "filesystem",
        "default_timeout": 2,
        "auth": {
            "required": false
        },
        "allow_parallel": false,
        "idempotency_key": {
            "required": true,
            "scope": "per-path",
            "guidance": "Combine the sandbox-relative path with a stable content hash to prevent duplicate writes."
        },
        "safety_level": "high",
        "policy_flags": {
            "sandbox_enforced": true,
            "reads_user_files": false,
            "writes_user_files": true
        },
        "quota_hints": {
            "max_bytes_per_write": 262144,
            "max_total_bytes": 10485760,
            "timeout_seconds": 2.0
        },
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Write or overwrite a file within the sandboxed filesystem while enforcing byte and total storage quotas.",
        "parameters": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Sandbox-relative destination path."
                },
                "content": {
                    "type": "string",
                    "description": "Text or base64 encoded payload to write."
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "text",
                        "base64"
                    ],
                    "default": "text",
                    "description": "Interpretation mode for the provided content."
                },
                "encoding": {
                    "type": "string",
                    "default": "utf-8",
                    "description": "Text encoding used when mode is 'text'."
                },
                "overwrite": {
                    "type": "boolean",
                    "default": true,
                    "description": "If false, refuse to overwrite an existing file."
                }
            },
            "required": [
                "path",
                "content"
            ]
        }
    },
    {
        "name": "filesystem_list",
        "version": "1.0.0",
        "side_effects": "filesystem",
        "default_timeout": 2,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-path",
            "guidance": "Use the sandbox-relative directory path and any listing options to deduplicate retries."
        },
        "safety_level": "low",
        "policy_flags": {
            "sandbox_enforced": true,
            "reads_user_files": true,
            "writes_user_files": false
        },
        "quota_hints": {
            "max_entries_per_list": 512,
            "timeout_seconds": 2.0
        },
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "List directory contents within the sandbox, returning metadata for each entry.",
        "parameters": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Sandbox-relative directory path. Defaults to the sandbox root when omitted."
                },
                "include_hidden": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to include dot-prefixed entries in results."
                },
                "max_entries": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Optional limit to further restrict the number of returned entries."
                }
            }
        }
    }
    ,
    {
        "name": "structured_parse",
        "version": "1.0.0",
        "side_effects": "filesystem",
        "default_timeout": 30,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": false,
            "guidance": "Use a content hash of the parsed document when deduplicating calls."
        },
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "document_parsing",
            "ocr"
        ],
        "providers": [
            {
                "name": "atlas_runtime",
                "priority": 0,
                "health_check_interval": 0
            }
        ],
        "description": "Extract normalized text, tables, and metadata from PDF, DOCX, HTML, CSV, or image documents.",
        "parameters": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "format": "byte",
                    "description": "Base64-encoded document bytes to parse."
                },
                "path": {
                    "type": "string",
                    "description": "Filesystem path to the document relative to the sandbox root."
                },
                "source_format": {
                    "type": "string",
                    "description": "Explicit document format hint when supplying raw bytes.",
                    "enum": [
                        "pdf",
                        "docx",
                        "html",
                        "csv",
                        "png",
                        "jpg",
                        "jpeg",
                        "tiff",
                        "bmp",
                        "gif",
                        "image"
                    ]
                },
                "target_formats": {
                    "type": "array",
                    "description": "Subset of output blocks to include in the response.",
                    "items": {
                        "type": "string",
                        "enum": [
                            "text",
                            "tables",
                            "metadata"
                        ]
                    }
                }
            },
            "anyOf": [
                {
                    "required": [
                        "content",
                        "source_format"
                    ]
                },
                {
                    "required": [
                        "path"
                    ]
                }
            ]
        },
        "safety_level": "low",
        "policy_flags": {
            "sandbox_enforced": true,
            "reads_user_files": true,
            "writes_user_files": false
        },
        "quota_hints": {
            "max_bytes": 5242880
        }
    }
]
