[
    {
        "name": "google_search",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 30,
        "auth": {
            "required": true,
            "type": "api_key",
            "env": "GOOGLE_API_KEY",
            "docs": "Set GOOGLE_API_KEY and GOOGLE_CSE_ID to use Google Programmable Search. When those are missing, configure SERPAPI_KEY as a fallback."
        },
        "allow_parallel": true,
        "description": "A Google search result API. When you need a short and clear answer to a specific question, you can use it. The input should be a search query.",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search content."
                },
                "k": {
                    "type": "integer",
                    "default": 10,
                    "description": "Select the first k results in the search results as the response.",
                    "minimum": 1
                }
            },
            "required": [
                "query"
            ]
        },
        "idempotency_key": false,
        "cost_per_call": 0.005,
        "cost_unit": "USD",
        "capabilities": [
            "web_search",
            "knowledge_lookup"
        ],
        "providers": [
            {
                "name": "google_cse",
                "priority": 0,
                "health_check_interval": 300,
                "config": {
                    "api_key_env": "GOOGLE_API_KEY",
                    "api_key_config": "GOOGLE_API_KEY",
                    "cse_id_env": "GOOGLE_CSE_ID",
                    "cse_id_config": "GOOGLE_CSE_ID"
                }
            },
            {
                "name": "serpapi",
                "priority": 10,
                "health_check_interval": 300
            }
        ]
    },
    {
        "name": "get_current_info",
        "version": "1.0.0",
        "side_effects": "none",
        "default_timeout": 5,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "description": "Get the current time, date, day, month and year, or timestamp based on the format specified.",
        "parameters": {
            "type": "object",
            "properties": {
                "format_type": {
                    "type": "string",
                    "enum": [
                        "time",
                        "date",
                        "day",
                        "month_year",
                        "timestamp"
                    ],
                    "default": "timestamp"
                },
                "timezone": {
                    "type": "string",
                    "description": "Optional IANA timezone identifier (e.g., \"America/New_York\"). Defaults to the configured timezone or UTC."
                }
            },
            "required": []
        },
        "idempotency_key": false,
        "cost_per_call": 0.0,
        "cost_unit": "USD",
        "capabilities": [
            "time_information",
            "date_information"
        ]
    },
    {
        "name": "policy_reference",
        "version": "1.0.0",
        "side_effects": "read_internal_guidance",
        "default_timeout": 10,
        "auth": {
            "required": false
        },
        "allow_parallel": true,
        "idempotency_key": {
            "required": true,
            "scope": "per-query"
        },
        "capabilities": [
            "policy_lookup",
            "risk_assessment_support"
        ],
        "description": "Retrieve internal safety and governance policy guidance relevant to a proposed action.",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Primary policy question or scenario to investigate."
                },
                "jurisdiction": {
                    "type": "string",
                    "description": "Optional region or framework to scope the search (for example: US, EU, GDPR)."
                },
                "policy_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional explicit policy identifiers to include in the response."
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of policy categories to filter by."
                },
                "include_full_text": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to return full guidance text for each policy."
                },
                "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5,
                    "default": 3,
                    "description": "Maximum number of policy entries to return."
                }
            },
            "required": [
                "query"
            ]
        }
    },
    {
        "name": "ats_scoring_service",
        "version": "1.0.0",
        "side_effects": "read_external_service",
        "default_timeout": 20,
        "auth": {
            "required": true,
            "type": "api_key",
            "env": "ATS_SCORING_SERVICE_API_KEY",
            "docs": "Configure ATS_SCORING_SERVICE_API_KEY or ats_scoring_service.api_key for authenticated requests."
        },
        "allow_parallel": true,
        "idempotency_key": false,
        "capabilities": [
            "resume_analysis",
            "ats_compliance"
        ],
        "description": "Submit resume and job description text to the ATS scoring service and return compatibility insights and optimization suggestions.",
        "parameters": {
            "type": "object",
            "properties": {
                "resume_text": {
                    "type": "string",
                    "description": "Full resume text to analyse for ATS alignment."
                },
                "job_description": {
                    "type": "string",
                    "description": "Target job description that should be used as the comparison baseline."
                },
                "job_title": {
                    "type": "string",
                    "description": "Optional job title that provides additional scoring context."
                },
                "focus_skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of focus skills or keywords that should be highlighted in the evaluation."
                },
                "experience_level": {
                    "type": "string",
                    "description": "Optional experience level (for example: entry, mid, senior) to tune scoring guidance."
                },
                "locale": {
                    "type": "string",
                    "description": "Optional locale or hiring region to account for local expectations."
                }
            },
            "required": [
                "resume_text",
                "job_description"
            ]
        }
    }
]
